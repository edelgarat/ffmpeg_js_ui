{"version":3,"sources":["Main/FileLoader/SystemDialog.tsx","Main/Template.tsx","Main/FileLoader/FileLoaderBox.tsx","Main/FileTree/FileMenuItem.tsx","Main/FileTree/index.tsx","Main/ffmpeg/command/CommandChildComponentWrapper.tsx","Main/helpers.ts","Main/ffmpeg/command/components/Resize.tsx","Main/ffmpeg/command/components/Extract.tsx","Main/ffmpeg/command/components/Bitrate.tsx","Main/dictionaries/codecs.ts","Main/ffmpeg/command/components/Codecs.tsx","Main/ffmpeg/command/index.tsx","Main/ffmpeg/library/ffmpeg.ts","Main/ffmpeg/command/useCommand.ts","Main/ffmpeg/useFFMPEG.ts","Main/mainHook.ts","Main/index.tsx","App.tsx","index.tsx"],"names":["FileAccept","StyledToolbar","styled","Toolbar","React","memo","children","rightElement","Box","flexDirection","width","display","AppBar","position","Typography","variant","color","noWrap","SystemDialog","maxSize","accept","onFileLoaded","file","useRef","useEffect","current","document","createElement","input","style","type","onchange","event","selectedFile","target","files","value","size","body","appendChild","removeChild","click","defaultProps","VIDEO","StyledList","List","primaryTypographyProps","selectedFileNames","toggleFileSelected","downloadFile","removeFile","disablePadding","map","ListItem","key","name","button","selected","onClick","ListItemText","primary","ListItemSecondaryAction","className","IconButton","newFileLoader","flex","overflow","FileMenuItem","label","node","enable","disable","checked","marginRight","height","FormControlLabel","control","Checkbox","onChange","setCommandArgument","curry","path","commandArguments","setArguments","data","assocPath","eventValue","func","ev","resize","output","CommandChildComponentWrapper","Tooltip","title","placement","TextField","placeholder","extractPartition","bitrate","videoCodecs","disabled","supportedOutputs","audioCodecs","BaseCodec","items","setType","FormControl","fullWidth","Select","MenuItem","VideoCodec","props","AudioCodec","flexWrap","Resize","Extract","Bitrate","FFMPEG","ffmpegModuleString","reader","worker","FileReader","Worker","URL","createObjectURL","Blob","getElementById","innerHTML","init","this","postMessage","location","href","addEventListener","emit","command","blob","Promise","resolve","onload","array","result","readAsArrayBuffer","callback","listener","removeEventListener","fileNames","EventEmitter","commandConfigFromArgument","video","audio","videoCodec","codec","audioCodec","applyCommandToString","argumentBase","push","getCommandArray","basePath","fileNamePostfix","inputs","forEach","Object","keys","arguments","outputFileExtension","useCommand","useState","setCommand","setInputs","assoc","setOutputExtension","extension","getString","join","getCommandString","getArray","useFFMPEG","logFunction","synchronizeFileSystem","fetch","process","then","val","text","ffmpegModuleSource","commandApi","ffmpeg","setFFMPEG","logRef","ffmpegSource","setInterval","on","msg","clearInterval","timer","ffmpegLoaded","run","localFiles","find","Date","now","toString","loadFile","localFile","runFilesWatcher","runWatcher","ref","update","setVal","useForceUpdate","selectedFiles","setSelectedFiles","console","log","fileName","url","propEq","objectURL","runFFMPEG","removeFFMPEGFile","newFileDetected","append","prop","selectedFilesNotEmpty","setSelectedFilesNotEmpty","a","all","length","toggleSelectFile","omit","uploadFile","download","remove","findIndex","StyledCode","code","outputFileExtensions","mainHook","selectedVideoCodec","useMemo","Template","alignItems","Button","justifyContent","open","FileLoaderBox","padding","CircularProgress","borderRight","FileTree","bgcolor","marginBottom","theme","createMuiTheme","palette","secondary","main","blue","indigo","App","ThemeProvider","Main","ReactDOM","render"],"mappings":"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","file":"static/js/main.7e31d02c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport enum FileAccept {\n  VIDEO = \"video/*\",\n}\n\ninterface SystemDialogInterface {\n  accept?: FileAccept;\n  maxSize?: number;\n  onFileLoaded: (file: File) => void;\n  children: (openDialog: () => void) => JSX.Element;\n}\n\nfunction SystemDialog({\n  maxSize,\n  accept,\n  children,\n  onFileLoaded,\n}: SystemDialogInterface) {\n  const file = React.useRef<HTMLInputElement>();\n  React.useEffect(() => {\n    file.current = document.createElement(\"input\");\n    const input = file.current;\n    input.style.display = \"none\";\n    input.accept = accept;\n    input.type = \"file\";\n    input.onchange = event => {\n      const selectedFile = (event.target as HTMLInputElement).files[0];\n      if (!selectedFile) return;\n      input.value = \"\";\n      if (maxSize && selectedFile.size > maxSize) return;\n      onFileLoaded(selectedFile);\n    };\n    document.body.appendChild(file.current);\n    return () => document.body.removeChild(file.current);\n  }, [onFileLoaded]);\n\n  return children(() => file.current && file.current.click());\n}\n\nSystemDialog.defaultProps = {\n  accept: FileAccept.VIDEO,\n};\n\nexport default React.memo(SystemDialog);\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nconst StyledToolbar = styled(Toolbar)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport default React.memo(function({\n  children,\n  rightElement,\n}: {\n  children: JSX.Element;\n  rightElement?: JSX.Element;\n}) {\n  return (\n    <>\n      <Box flexDirection=\"column\" width=\"100%\" display=\"flex\">\n        <AppBar position=\"relative\">\n          <StyledToolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              FFMPEG Online\n            </Typography>\n            {rightElement}\n          </StyledToolbar>\n        </AppBar>\n        {children}\n      </Box>\n    </>\n  );\n});\n","import styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default styled(Box)`\n  cursor: pointer;\n  border: 2px dashed gray;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText, {\n  ListItemTextProps,\n} from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\n\nimport { LocalFileInterface } from \"../types\";\n\ninterface FileMenuItemInterface {\n  files: LocalFileInterface[];\n  selectedFileNames: { [name: string]: true };\n  toggleFileSelected: (file: LocalFileInterface) => void;\n  downloadFile: (file: LocalFileInterface) => void;\n  removeFile: (file: LocalFileInterface) => void;\n}\n\nconst StyledList = styled(List)`\n  li {\n    .MuiListItem-secondaryAction {\n      padding-right: 16px;\n      transition: padding-right 0.2s;\n    }\n    .file_menu_item_actions {\n      transition: opacity 0.2s;\n      opacity: 0;\n    }\n    :hover {\n      .MuiListItem-secondaryAction {\n        padding-right: 80px;\n      }\n      .file_menu_item_actions {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst primaryTypographyProps: ListItemTextProps[\"primaryTypographyProps\"] = {\n  noWrap: true,\n  display: \"block\",\n};\n\nexport default React.memo(function({\n  files,\n  selectedFileNames,\n  toggleFileSelected,\n  downloadFile,\n  removeFile,\n}: FileMenuItemInterface) {\n  return (\n    <StyledList disablePadding>\n      {files.map(file => (\n        <ListItem\n          key={file.name}\n          button\n          selected={selectedFileNames[file.name]}\n          onClick={() => toggleFileSelected(file)}\n        >\n          <ListItemText\n            primary={file.name}\n            primaryTypographyProps={primaryTypographyProps}\n          />\n          <ListItemSecondaryAction className=\"file_menu_item_actions\">\n            <IconButton size=\"small\" onClick={() => downloadFile(file)}>\n              <DownloadIcon />\n            </IconButton>\n            <IconButton size=\"small\" onClick={() => removeFile(file)}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\n\nimport FileMenuItem from \"./FileMenuItem\";\nimport {LocalFileInterface} from \"../types\";\n\ninterface FileTreeInterface {\n  files: LocalFileInterface[];\n  selectedFileNames: { [name: string]: true };\n  newFileLoader: JSX.Element;\n  toggleFileSelected: (file: LocalFileInterface) => void;\n  downloadFile: (file: LocalFileInterface) => void;\n  removeFile: (file: LocalFileInterface) => void;\n}\n\nexport default React.memo(function({\n  files,\n  selectedFileNames,\n  newFileLoader,\n  toggleFileSelected,\n  downloadFile,\n  removeFile,\n}: FileTreeInterface) {\n  return (\n    <>\n      <Box flex={1} overflow=\"scroll\">\n        <List>\n          <FileMenuItem\n            files={files}\n            selectedFileNames={selectedFileNames}\n            toggleFileSelected={toggleFileSelected}\n            removeFile={removeFile}\n            downloadFile={downloadFile}\n          />\n        </List>\n      </Box>\n      {newFileLoader}\n    </>\n  );\n});\n","import React from \"react\";\nimport { assocPath, curry } from \"ramda\";\nimport Box from \"@material-ui/core/Box\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { CommandArgumentsInterface } from \"./useCommand\";\n\ninterface CommandChildComponentWrapperInterface {\n  label: string;\n  node: any;\n  children: () => React.ReactNode;\n  enable: () => void;\n  disable: () => void;\n}\n\nexport default React.memo(function({\n  children,\n  label,\n  node,\n  enable,\n  disable,\n}: CommandChildComponentWrapperInterface) {\n  const checked = !!node;\n  return (\n    <Box display=\"flex\" marginRight=\"18px\" height=\"56px\">\n      <FormControlLabel\n        control={\n          <Checkbox checked={checked} onChange={checked ? disable : enable} />\n        }\n        label={label}\n      />\n      {checked && children()}\n    </Box>\n  );\n});\n\nexport const setCommandArgument = curry(function(\n  path: (string | number)[],\n  commandArguments: CommandArgumentsInterface,\n  setArguments: (data: CommandArgumentsInterface) => void,\n  data,\n) {\n  setArguments(assocPath(path, data, commandArguments));\n});\n","import { useState } from \"react\";\n\nexport function preventDefault(ev: Event) {\n  ev.preventDefault();\n}\n\nexport function useForceUpdate() {\n  const [, setVal] = useState();\n  return () => setVal({});\n}\n\nexport function eventValue(func: Function) {\n  return function(ev?: any) {\n    if (ev && ev.target) {\n      func(ev.target.value);\n      return;\n    }\n\n    func(null);\n  };\n}\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"../../../helpers\";\n\nimport { CommandControllerInterface } from \"../useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { resize } = commandArguments.output;\n  return (\n    <CommandChildComponentWrapper\n      node={resize}\n      label=\"Resize\"\n      enable={() =>\n        setCommandArgument(\n          [\"output\", \"resize\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"output\", \"resize\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"200px\" display=\"flex\">\n          <Tooltip\n            title=\"horizontal pixel size of the video\"\n            placement=\"bottom-start\"\n          >\n            <TextField\n              label=\"Width\"\n              value={resize[0]}\n              placeholder=\"1920\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"output\", \"resize\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip\n            title=\"vertical pixel size of the video\"\n            placement=\"bottom-start\"\n          >\n            <TextField\n              label=\"Height\"\n              value={resize[1]}\n              placeholder=\"1080\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"output\", \"resize\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"../../../helpers\";\n\nimport { CommandControllerInterface } from \"../useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { extractPartition } = commandArguments.input;\n  return (\n    <CommandChildComponentWrapper\n      node={extractPartition}\n      label=\"Extract partition\"\n      enable={() =>\n        setCommandArgument(\n          [\"input\", \"extractPartition\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"input\", \"extractPartition\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"350px\" display=\"flex\">\n          <Tooltip title=\"Start trimming video from\" placement=\"bottom-start\">\n            <TextField\n              label=\"Start\"\n              placeholder=\"00:00:00\"\n              value={extractPartition[0]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"extractPartition\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip title=\"Video trimming length\" placement=\"bottom-start\">\n            <TextField\n              label=\"Length\"\n              value={extractPartition[1]}\n              placeholder=\"00:00:00\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"extractPartition\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"../../../helpers\";\n\nimport { CommandControllerInterface } from \"../useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { bitrate } = commandArguments.input;\n  return (\n    <CommandChildComponentWrapper\n      node={bitrate}\n      label=\"Bitrate\"\n      enable={() =>\n        setCommandArgument(\n          [\"input\", \"bitrate\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"input\", \"bitrate\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"300px\" display=\"flex\">\n          <Tooltip title=\"Video bitrate\" placement=\"bottom-start\">\n            <TextField\n              label=\"Video\"\n              placeholder=\"4m\"\n              value={bitrate[0]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"bitrate\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip title=\"Audio bitrate\" placement=\"bottom-start\">\n            <TextField\n              label=\"Audio\"\n              placeholder=\"128k\"\n              value={bitrate[1]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"bitrate\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","export interface CodecItem {\n  name: string;\n  value: string;\n  supportedOutputs?: string[];\n  disabled?: boolean;\n}\n\nexport const videoCodecs: CodecItem[] = [\n  { name: \"Copy original\", value: \"copy\" },\n  { name: \"H.264\", value: \"libx264\" },\n  { name: \"H.265\", value: \"libx265\", disabled: true },\n  { name: \"MPEG-4 (part 2)\", value: \"mpeg4\" },\n  { name: \"AV1\", value: \"libaom-av1\", disabled: true },\n  { name: \"VP8\", value: \"libvpx\", disabled: true },\n  { name: \"VP9 (google)\", value: \"libvpx-vp9\", disabled: true },\n  {\n    name: \"Apple ProRes\",\n    value: \"prores\",\n    supportedOutputs: [\"mkv\"],\n  },\n];\n\nexport const audioCodecs: CodecItem[] = [\n  { name: \"Copy original\", value: \"copy\" },\n  { name: \"Vorbis\", value: \"libvorbis\", disabled: true },\n  { name: \"AAC\", value: \"aac\" },\n  { name: \"OPUS\", value: \"opus\" },\n];\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Box from \"@material-ui/core/Box\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"../../../helpers\";\n\nimport {\n  CodecItem,\n  audioCodecs,\n  videoCodecs,\n} from \"../../../dictionaries/codecs\";\n\nimport { CommandControllerInterface } from \"../useCommand\";\n\ninterface CodecsInterface extends CommandControllerInterface {\n  label: string;\n  type: \"videoCodec\" | \"audioCodec\";\n  items: CodecItem[];\n}\n\nconst BaseCodec = React.memo(function({\n  commandArguments,\n  type,\n  label,\n  items,\n  setArguments,\n}: CodecsInterface) {\n  const setType = setCommandArgument(\n    [\"input\", type],\n    commandArguments,\n    setArguments,\n  );\n\n  return (\n    <CommandChildComponentWrapper\n      node={commandArguments.input[type]}\n      label={label}\n      enable={() => setType(\"copy\")}\n      disable={() => setType(null)}\n    >\n      {() => (\n        <Box width=\"140px\" display=\"flex\">\n          <FormControl variant=\"outlined\" fullWidth>\n            <Select\n              value={commandArguments.input[type]}\n              onChange={eventValue(setType)}\n            >\n              {items.map(({ name, value, disabled }) => (\n                <MenuItem key={value} disabled={disabled} value={value}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n\nexport const VideoCodec = (props: CommandControllerInterface) => (\n  <BaseCodec\n    {...props}\n    label=\"Video Codec\"\n    type=\"videoCodec\"\n    items={videoCodecs}\n  />\n);\n\nexport const AudioCodec = (props: CommandControllerInterface) => (\n  <BaseCodec\n    {...props}\n    label=\"Audio Codec\"\n    type=\"audioCodec\"\n    items={audioCodecs}\n  />\n);\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Resize from \"./components/Resize\";\nimport Extract from \"./components/Extract\";\nimport Bitrate from \"./components/Bitrate\";\nimport { AudioCodec, VideoCodec } from \"./components/Codecs\";\n\nimport { CommandControllerInterface } from \"./useCommand\";\n\nexport default React.memo(function(props: CommandControllerInterface) {\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\">\n      <Resize {...props} />\n      <Extract {...props} />\n      <Bitrate {...props} />\n      <VideoCodec {...props} />\n      <AudioCodec {...props} />\n    </Box>\n  );\n});\n","import { EventEmitter } from \"events\";\n\nexport default class FFMPEG extends EventEmitter {\n  private reader: FileReader;\n  private worker: Worker;\n\n  constructor(ffmpegModuleString: string) {\n    super();\n    this.reader = new FileReader();\n\n    this.worker = new Worker(\n      URL.createObjectURL(\n        new Blob([\n          `\n${ffmpegModuleString}\n${document.getElementById(\"ffmpeg-worker\").innerHTML}\nffmpegForker();\n`,\n        ]),\n      ),\n    );\n\n    this.init();\n  }\n\n  private init() {\n    this.worker.postMessage(`${document.location.href}static/js/`);\n\n    const listener = ({ data: { type, data } }) => {\n      switch (type) {\n        case \"synchronizeFileSystem\":\n          this.emit(\"synchronizeFileSystem\", data);\n          break;\n        case \"log\":\n          this.emit(\"log\", data);\n          break;\n      }\n    };\n\n    this.worker.addEventListener(\"message\", listener);\n  }\n\n  run(command: string[]) {\n    this.worker.postMessage({\n      type: \"run\",\n      data: command,\n    });\n  }\n\n  loadFile(name: string, file: File) {\n    const blob = new Blob([file], { type: file.type });\n    return new Promise(resolve => {\n      this.reader.onload = event => {\n        this.worker.postMessage({\n          type: \"loadFile\",\n          data: {\n            name,\n            array: event.target.result,\n          },\n        });\n        resolve();\n      };\n      this.reader.readAsArrayBuffer(blob);\n    });\n  }\n\n  runWatcher(callback: (data: WatcherCallbackDataInterface) => void) {\n    const listener = ({ data: { type, data } }) => {\n      if (type === \"fileWatcherTick\") callback(data);\n    };\n\n    this.worker.addEventListener(\"message\", listener);\n    return () => this.worker.removeEventListener(\"message\", listener);\n  }\n\n  removeFile(name: string) {\n    this.worker.postMessage({\n      type: \"removeFile\",\n      data: name,\n    });\n  }\n\n  synchronizeFileSystem(fileNames: string[]) {\n    this.worker.postMessage({\n      type: \"synchronizeFileSystem\",\n      data: fileNames,\n    });\n  }\n}\n\nexport interface WatcherCallbackDataInterface {\n  [name: string]: true;\n}\n","import React from \"react\";\nimport { assoc } from \"ramda\";\n\nexport interface CommandArgumentsInterface {\n  input: {\n    bitrate?: [string, string];\n    extractPartition?: [string, string];\n    videoCodec?: string;\n    audioCodec?: string;\n  };\n  output: {\n    resize?: [string, string];\n  };\n}\n\nexport interface CommandInterface {\n  inputs: string[];\n  outputFileExtension: string;\n  arguments: CommandArgumentsInterface;\n}\n\nexport interface CommandControllerInterface {\n  commandArguments: CommandArgumentsInterface;\n  setArguments: (commandArguments: CommandArgumentsInterface) => void;\n}\n\nconst commandConfigFromArgument: Record<\n  | (keyof CommandArgumentsInterface[\"input\"])\n  | keyof (CommandArgumentsInterface[\"output\"]),\n  (data: any) => string[]\n> = {\n  bitrate: ([video, audio]) => [\n    ...(video ? [\"-b:v\", video] : []),\n    ...(audio ? [\"-b:a\", audio] : []),\n  ],\n  resize: ([width, height]) => [\"-vf\", `scale=${width}:${height}`],\n  extractPartition: ([from, length]) => [\"-ss\", from, \"-t\", length],\n  videoCodec: codec => [\"-c:v\", codec],\n  audioCodec: codec => [\"-c:a\", codec],\n};\n\nfunction applyCommandToString(\n  key: string,\n  argumentBase:\n    | CommandArgumentsInterface[\"input\"]\n    | CommandArgumentsInterface[\"output\"],\n  result: string[],\n) {\n  if (!argumentBase[key]) return;\n  result.push(...commandConfigFromArgument[key](argumentBase[key]));\n}\n\nfunction getCommandArray(\n  command: CommandInterface,\n  basePath = \"\",\n  fileNamePostfix = \"\",\n) {\n  const result = [\n    \"ffmpeg\",\n    \"-threads\",\n    \"1\",\n    \"-y\",\n    \"-loglevel\",\n    \"debug\",\n    \"-nostdin\",\n  ];\n\n  command.inputs.forEach(input => {\n    result.push(\"-i\", `${basePath}${input}`);\n  });\n\n  result.push(\"-strict\", \"-2\");\n\n  Object.keys(command.arguments.input).forEach(key => {\n    applyCommandToString(key, command.arguments.input, result);\n  });\n\n  result.push(\n    `${basePath}output${fileNamePostfix}.${command.outputFileExtension}`,\n  );\n\n  Object.keys(command.arguments.output).forEach(key => {\n    applyCommandToString(key, command.arguments.output, result);\n  });\n\n  return result;\n}\n\nfunction getCommandString(command: CommandInterface) {\n  return getCommandArray(command).join(\" \");\n}\n\nexport default function useCommand() {\n  const [command, setCommand] = React.useState<CommandInterface>(() => ({\n    inputs: [],\n    outputFileExtension: \"mp4\",\n    arguments: {\n      input: {\n        audioCodec: \"copy\",\n        videoCodec: \"copy\",\n      },\n      output: {},\n    },\n  }));\n\n  return {\n    command,\n    setInputs: (inputs: string[]) =>\n      setCommand(assoc(\"inputs\", inputs, command)),\n    setOutputExtension: (extension: string) =>\n      setCommand(assoc(\"outputFileExtension\", extension, command)),\n    getString: () => getCommandString(command),\n    getArray: (basePath, fileNamePostfix?: string) =>\n      getCommandArray(command, basePath, fileNamePostfix),\n    setArguments: (commandArguments: CommandArgumentsInterface) =>\n      setCommand(assoc(\"arguments\", commandArguments, command)),\n  };\n}\n","import React from \"react\";\n\nimport FFMPEG, { WatcherCallbackDataInterface } from \"./library/ffmpeg\";\nimport useCommand, { CommandInterface } from \"./command/useCommand\";\n\nimport { LocalFileInterface } from \"../types\";\n\nfunction calculateFileNamePostfix(\n  command: CommandInterface,\n  files: LocalFileInterface[],\n) {\n  return files.find(\n    file => file.name === `output.${command.outputFileExtension}`,\n  )\n    ? `.${Date.now().toString()}`\n    : \"\";\n}\n\nexport function useFFMPEG(\n  logFunction: (msg: string) => void,\n  synchronizeFileSystem: (files: { fileName: string; url: string }[]) => void,\n) {\n  const [ffmpegModuleSource] = React.useState(() =>\n    fetch(`${process.env.PUBLIC_URL || \"\"}/static/js/ffmpeg-core.js`).then(\n      val => val.text(),\n    ),\n  );\n\n  const commandApi = useCommand();\n\n  const [ffmpeg, setFFMPEG] = React.useState<FFMPEG>(null);\n\n  const logRef = React.useRef(\"\");\n\n  React.useEffect(() => {\n    let timer;\n    ffmpegModuleSource.then(ffmpegSource => {\n      setInterval(() => {\n        logFunction(logRef.current);\n        logRef.current = \"\";\n      }, 1000);\n\n      const ffmpeg = new FFMPEG(ffmpegSource);\n      ffmpeg.on(\"log\", msg => {\n        logRef.current += `${msg}\\n\\n`;\n      });\n      ffmpeg.on(\"synchronizeFileSystem\", synchronizeFileSystem);\n      setFFMPEG(ffmpeg);\n    });\n    return () => clearInterval(timer);\n  }, []);\n\n  return {\n    ffmpegLoaded: !!ffmpeg,\n    commandApi,\n    removeFile: (name: string) => ffmpeg.removeFile(name),\n    run: (localFiles: LocalFileInterface[]) =>\n      ffmpeg.run(\n        commandApi.getArray(\n          \"/src/\",\n          calculateFileNamePostfix(commandApi.command, localFiles),\n        ),\n      ),\n    loadFile: (localFile: LocalFileInterface) =>\n      ffmpeg.loadFile(localFile.name, localFile.file),\n    runFilesWatcher: (\n      callback: (files: WatcherCallbackDataInterface) => void,\n    ) => ffmpeg.runWatcher(callback),\n    synchronizeFileSystem: (fileNames: string[]) =>\n      ffmpeg.synchronizeFileSystem(fileNames),\n  };\n}\n","import React, { MutableRefObject } from \"react\";\nimport { append, omit, remove, propEq, prop } from \"ramda\";\n\nimport { useFFMPEG } from \"./ffmpeg/useFFMPEG\";\nimport { useForceUpdate } from \"./helpers\";\n\nimport { LocalFileInterface } from \"./types\";\n\nexport default function(ref: MutableRefObject<HTMLElement>) {\n  const update = useForceUpdate();\n  const localFiles = React.useRef<LocalFileInterface[]>([]);\n  const [selectedFiles, setSelectedFiles] = React.useState<{\n    [name: string]: true;\n  }>({});\n\n  const {\n    ffmpegLoaded,\n    commandApi,\n    run: runFFMPEG,\n    loadFile,\n    runFilesWatcher,\n    removeFile: removeFFMPEGFile,\n    synchronizeFileSystem,\n  } = useFFMPEG(\n    msg => {\n      if (!msg) return;\n      if (ref.current) {\n        ref.current.innerHTML += msg;\n        return;\n      }\n      console.log(msg);\n    },\n    files => {\n      files.forEach(({ fileName, url }) => {\n        const file = localFiles.current.find(propEq(\"name\", fileName));\n        if (!file) return;\n        file.objectURL = url;\n      });\n      update();\n    },\n  );\n\n  React.useEffect(() => {\n    if (!ffmpegLoaded) return;\n    runFilesWatcher(data => {\n      let newFileDetected = false;\n      Object.keys(data).forEach(fileName => {\n        const localFile = localFiles.current.find(propEq(\"name\", fileName));\n        if (localFile) return;\n        localFiles.current = append(\n          { name: fileName, file: null, objectURL: null },\n          localFiles.current,\n        );\n        newFileDetected = true;\n      });\n      if (newFileDetected) {\n        synchronizeFileSystem(localFiles.current.map(prop(\"name\")));\n      }\n      update();\n    });\n  }, [ffmpegLoaded]);\n\n  const [selectedFilesNotEmpty, setSelectedFilesNotEmpty] = React.useState(\n    false,\n  );\n\n  React.useEffect(() => {\n    const keys = Object.keys(selectedFiles);\n    commandApi.setInputs(keys);\n    setSelectedFilesNotEmpty(!!keys.length);\n  }, [selectedFiles]);\n\n  function toggleSelectFile(file: LocalFileInterface) {\n    if (selectedFiles[file.name]) {\n      setSelectedFiles(omit([file.name], selectedFiles));\n      return;\n    }\n    setSelectedFiles({ ...selectedFiles, [file.name]: true });\n  }\n\n  async function uploadFile(file: File) {\n    localFiles.current = append(\n      { name: file.name, file: file },\n      localFiles.current,\n    );\n    await Promise.all(localFiles.current.map(loadFile));\n    update();\n  }\n\n  function downloadFile(file: LocalFileInterface) {\n    const a = document.createElement(\"a\");\n    a.download = file.name;\n    document.body.appendChild(a);\n    if (file.objectURL) {\n      a.href = file.objectURL;\n    } else {\n      a.href = URL.createObjectURL(new Blob([file.file]));\n    }\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  function removeFile(localFile: LocalFileInterface) {\n    removeFFMPEGFile(localFile.name);\n    localFiles.current = remove(\n      localFiles.current.findIndex(propEq(\"name\", localFile.name)),\n      1,\n      localFiles.current,\n    );\n    setSelectedFiles(omit([localFile.name], selectedFiles));\n  }\n\n  return {\n    ffmpegLoaded,\n    selectedFiles,\n    commandApi,\n    selectedFilesNotEmpty,\n    localFiles: localFiles.current,\n    run: () => runFFMPEG(localFiles.current),\n    toggleSelectFile,\n    uploadFile,\n    downloadFile,\n    removeFile,\n  };\n}\n","import React from \"react\";\nimport { propEq } from \"ramda\";\nimport styled from \"styled-components/macro\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Template from \"./Template\";\nimport FileLoaderSystemDialog from \"./FileLoader/SystemDialog\";\nimport FileLoaderBox from \"./FileLoader/FileLoaderBox\";\nimport FileTree from \"./FileTree\";\nimport Command from \"./ffmpeg/command\";\n\nimport { videoCodecs } from \"./dictionaries/codecs\";\n\nimport mainHook from \"./mainHook\";\nimport { eventValue } from \"./helpers\";\n\nconst StyledCode = styled.code`\n  white-space: pre-wrap;\n  overflow: scroll;\n  background-color: white;\n  padding: 12px;\n  flex: 1;\n`;\n\nconst outputFileExtensions = [\"mp4\", \"avi\", \"mpg\", \"mkv\"];\n\nexport default React.memo(function() {\n  const logRef = React.useRef<HTMLElement>(null);\n  const {\n    ffmpegLoaded,\n    selectedFiles,\n    commandApi,\n    selectedFilesNotEmpty,\n    localFiles,\n    toggleSelectFile,\n    uploadFile,\n    downloadFile,\n    removeFile,\n    run,\n  } = mainHook(logRef);\n\n  const videoCodec = commandApi.command.arguments.input.videoCodec;\n\n  const selectedVideoCodec = React.useMemo(\n    () => videoCodecs.find(propEq(\"value\", videoCodec)),\n    [videoCodec],\n  );\n\n  React.useEffect(() => {\n    if (selectedVideoCodec && selectedVideoCodec.supportedOutputs)\n      commandApi.setOutputExtension(selectedVideoCodec.supportedOutputs[0]);\n  }, [selectedVideoCodec]);\n\n  return (\n    <Template\n      rightElement={\n        <Box display=\"flex\" alignItems=\"center\">\n          {selectedFilesNotEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"large\"\n              onClick={run}\n            >\n              run\n            </Button>\n          )}\n        </Box>\n      }\n    >\n      {localFiles.length === 0 ? (\n        <Box\n          display=\"flex\"\n          flex={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {ffmpegLoaded ? (\n            <FileLoaderSystemDialog onFileLoaded={uploadFile}>\n              {open => (\n                <FileLoaderBox padding=\"100px 180px\" onClick={open}>\n                  <Typography>Click here to select file</Typography>\n                </FileLoaderBox>\n              )}\n            </FileLoaderSystemDialog>\n          ) : (\n            <>\n              <CircularProgress />\n              <Typography>Loading FFMPEG library...</Typography>\n            </>\n          )}\n        </Box>\n      ) : (\n        <Box display=\"flex\" flex={1} height=\"calc(100vh - 64px)\">\n          <Box\n            height=\"100%\"\n            width=\"20%\"\n            padding=\"18px\"\n            borderRight=\"1px solid lightgray\"\n            display=\"flex\"\n            flexDirection=\"column\"\n          >\n            <FileTree\n              files={localFiles}\n              selectedFileNames={selectedFiles}\n              newFileLoader={\n                <FileLoaderSystemDialog onFileLoaded={uploadFile}>\n                  {open => (\n                    <FileLoaderBox padding=\"10px 100px\" onClick={open}>\n                      <Typography>Upload file</Typography>\n                    </FileLoaderBox>\n                  )}\n                </FileLoaderSystemDialog>\n              }\n              downloadFile={downloadFile}\n              removeFile={removeFile}\n              toggleFileSelected={toggleSelectFile}\n            />\n          </Box>\n          <Box\n            height=\"100%\"\n            width=\"80%\"\n            padding=\"18px\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"space-between\"\n          >\n            <Box padding=\"18px\" display=\"flex\">\n              <Box\n                bgcolor=\"lightgray\"\n                marginRight=\"18px\"\n                flex={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                padding=\"0 18px\"\n              >\n                <code>{commandApi.getString()}</code>\n              </Box>\n              <Box width=\"100px\" marginBottom=\"2px\">\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Select\n                    value={commandApi.command.outputFileExtension}\n                    onChange={eventValue(commandApi.setOutputExtension)}\n                  >\n                    {(\n                      (selectedVideoCodec &&\n                        selectedVideoCodec.supportedOutputs) ||\n                      outputFileExtensions\n                    ).map(name => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n            </Box>\n            <Box padding=\"18px\">\n              <Command\n                commandArguments={commandApi.command.arguments}\n                setArguments={commandApi.setArguments}\n              />\n            </Box>\n            <Box flexDirection=\"column\" display=\"flex\" height=\"100%\">\n              <Box\n                padding=\"18px\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"flex-end\"\n              >\n                <Button onClick={() => (logRef.current.innerHTML = \"\")}>\n                  Clear logs\n                </Button>\n              </Box>\n              <StyledCode ref={logRef} />\n            </Box>\n          </Box>\n        </Box>\n      )}\n    </Template>\n  );\n});\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, indigo } from \"@material-ui/core/colors\";\n\nimport \"./styles/clear.css\";\nimport \"./styles/App.css\";\n\nimport Main from \"./Main\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}