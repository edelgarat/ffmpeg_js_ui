{"version":3,"sources":["App/FileLoader/FileSelectorSystemDialog.tsx","App/Layout.tsx","App/FileLoader/FileLoaderBox.tsx","App/FileTree/FileMenuItem.tsx","App/FileTree/index.tsx","App/EmptyFiles/index.tsx","App/LoggerView/index.tsx","App/CommandBuilder/CommandChildComponentWrapper.tsx","libs/helpers.ts","App/CommandBuilder/components/Resize.tsx","App/CommandBuilder/components/Extract.tsx","App/CommandBuilder/components/Bitrate.tsx","dictionaries/codecs.ts","App/CommandBuilder/components/Codecs.tsx","App/CommandBuilder/index.tsx","libs/ffmpeg/library/ffmpeg.ts","libs/tsToJs.ts","libs/ffmpeg/useCommand.ts","libs/ffmpeg/useFFMPEG.ts","App/mainHook.ts","App/index.tsx","index.tsx"],"names":["FileAccept","StyledToolbar","styled","Toolbar","React","memo","children","headerAction","Box","flexDirection","width","display","AppBar","position","Typography","variant","color","noWrap","FileSelectorSystemDialog","maxSize","accept","onFileLoaded","file","useRef","useEffect","current","document","createElement","input","style","type","onchange","event","selectedFile","target","files","value","size","body","appendChild","removeChild","click","defaultProps","VIDEO","StyledList","List","primaryTypographyProps","selectedFileNames","toggleFileSelected","downloadFile","removeFile","disablePadding","map","ListItem","key","name","button","selected","onClick","ListItemText","primary","ListItemSecondaryAction","className","IconButton","newFileLoader","flex","overflow","FileMenuItem","loading","uploadFile","justifyContent","alignItems","CircularProgress","open","FileLoaderBox","padding","StyledCode","code","logRef","height","Button","innerHTML","ref","label","node","enable","disable","checked","marginRight","FormControlLabel","control","Checkbox","onChange","setCommandArgument","curry","path","commandArguments","setArguments","data","assocPath","eventValue","func","ev","resize","output","CommandChildComponentWrapper","Tooltip","title","placement","TextField","placeholder","extractPartition","bitrate","videoCodecs","disabled","supportedOutputs","audioCodecs","BaseCodec","items","setType","FormControl","fullWidth","Select","MenuItem","VideoCodec","props","AudioCodec","flexWrap","Resize","Extract","Bitrate","worker","FFMPEG","ffmpegModuleString","init","workerValue","blob","Blob","this","default","require","transpileModule","outputText","Worker","URL","createObjectURL","prepareWorker","postMessage","location","href","addEventListener","emit","command","reader","FileReader","Promise","resolve","onload","array","result","readAsArrayBuffer","callback","listener","removeEventListener","fileNames","EventEmitter","commandConfigFromArgument","video","audio","videoCodec","codec","audioCodec","applyCommandToString","argumentBase","push","getCommandArray","basePath","fileNamePostfix","inputs","forEach","Object","keys","arguments","outputFileExtension","useCommand","useState","setCommand","setInputs","assoc","setOutputExtension","extension","getString","join","getCommandString","getArray","useFFMPEG","logFunction","synchronizeFileSystem","a","url","process","fetch","core","text","ffmpegModuleSource","commandApi","ffmpeg","setFFMPEG","logTextRef","loggerTimerGetter","ffmpegSource","timer","setInterval","on","msg","loggerUpdateInterval","createFFMPEGModule","clearInterval","ffmpegLoaded","run","localFiles","find","Date","now","toString","commandArray","loadFile","localFile","runFilesWatcher","runWatcher","update","setVal","useForceUpdate","selectedFiles","setSelectedFiles","console","log","fileName","propEq","objectURL","runFFMPEG","removeFFMPEGFile","newFileDetected","append","prop","selectedFilesNotEmpty","setSelectedFilesNotEmpty","all","length","toggleSelectFile","omit","download","remove","findIndex","defaultOutputFileExtensions","mainHook","selectedVideoCodec","useMemo","Layout","EmptyFiles","borderRight","FileTree","bgcolor","marginBottom","getCodecFileExtension","CommandBuilder","LoggerView","theme","createMuiTheme","palette","secondary","main","blue","indigo","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.6bb09aa2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport enum FileAccept {\n  VIDEO = \"video/*\",\n}\n\ninterface SystemDialogInterface {\n  accept?: FileAccept;\n  maxSize?: number;\n  onFileLoaded: (file: File) => void;\n  children: (openDialog: () => void) => JSX.Element;\n}\n\nfunction FileSelectorSystemDialog({\n  maxSize,\n  accept,\n  children,\n  onFileLoaded,\n}: SystemDialogInterface) {\n  const file = React.useRef<HTMLInputElement>();\n  React.useEffect(() => {\n    file.current = document.createElement(\"input\");\n    const input = file.current;\n    input.style.display = \"none\";\n    input.accept = accept;\n    input.type = \"file\";\n    input.onchange = event => {\n      const selectedFile = (event.target as HTMLInputElement).files[0];\n      if (!selectedFile) return;\n      input.value = \"\";\n      if (maxSize && selectedFile.size > maxSize) return;\n      onFileLoaded(selectedFile);\n    };\n    document.body.appendChild(file.current);\n    return () => document.body.removeChild(file.current);\n  }, [onFileLoaded]);\n\n  return children(() => file.current && file.current.click());\n}\n\nFileSelectorSystemDialog.defaultProps = {\n  accept: FileAccept.VIDEO,\n};\n\nexport default React.memo(FileSelectorSystemDialog);\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nconst StyledToolbar = styled(Toolbar)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\ninterface LayoutInterface {\n  children: JSX.Element;\n  headerAction?: JSX.Element;\n}\n\nexport default React.memo(function({\n  children,\n  headerAction,\n}: LayoutInterface) {\n  return (\n    <>\n      <Box flexDirection=\"column\" width=\"100%\" display=\"flex\">\n        <AppBar position=\"relative\">\n          <StyledToolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              FFMPEG Online\n            </Typography>\n            {headerAction}\n          </StyledToolbar>\n        </AppBar>\n        {children}\n      </Box>\n    </>\n  );\n});\n","import styled from \"styled-components\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default styled(Box)`\n  cursor: pointer;\n  border: 2px dashed gray;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText, {\n  ListItemTextProps,\n} from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\n\nimport { LocalFileInterface } from \"types\";\n\ninterface FileMenuItemInterface {\n  files: LocalFileInterface[];\n  selectedFileNames: { [name: string]: true };\n  toggleFileSelected: (file: LocalFileInterface) => void;\n  downloadFile: (file: LocalFileInterface) => void;\n  removeFile: (file: LocalFileInterface) => void;\n}\n\nconst StyledList = styled(List)`\n  li {\n    .MuiListItem-secondaryAction {\n      padding-right: 16px;\n      transition: padding-right 0.2s;\n    }\n    .file_menu_item_actions {\n      transition: opacity 0.2s;\n      opacity: 0;\n    }\n    :hover {\n      .MuiListItem-secondaryAction {\n        padding-right: 80px;\n      }\n      .file_menu_item_actions {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst primaryTypographyProps: ListItemTextProps[\"primaryTypographyProps\"] = {\n  noWrap: true,\n  display: \"block\",\n};\n\nexport default React.memo(function({\n  files,\n  selectedFileNames,\n  toggleFileSelected,\n  downloadFile,\n  removeFile,\n}: FileMenuItemInterface) {\n  return (\n    <StyledList disablePadding>\n      {files.map(file => (\n        <ListItem\n          key={file.name}\n          button\n          selected={selectedFileNames[file.name]}\n          onClick={() => toggleFileSelected(file)}\n        >\n          <ListItemText\n            primary={file.name}\n            primaryTypographyProps={primaryTypographyProps}\n          />\n          <ListItemSecondaryAction className=\"file_menu_item_actions\">\n            <IconButton size=\"small\" onClick={() => downloadFile(file)}>\n              <DownloadIcon />\n            </IconButton>\n            <IconButton size=\"small\" onClick={() => removeFile(file)}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </StyledList>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\n\nimport FileMenuItem from \"./FileMenuItem\";\n\nimport { LocalFileInterface } from \"types\";\n\ninterface FileTreeInterface {\n  files: LocalFileInterface[];\n  selectedFileNames: { [name: string]: true };\n  newFileLoader: JSX.Element;\n  toggleFileSelected: (file: LocalFileInterface) => void;\n  downloadFile: (file: LocalFileInterface) => void;\n  removeFile: (file: LocalFileInterface) => void;\n}\n\nexport default React.memo(function({\n  files,\n  selectedFileNames,\n  newFileLoader,\n  toggleFileSelected,\n  downloadFile,\n  removeFile,\n}: FileTreeInterface) {\n  return (\n    <>\n      <Box flex={1} overflow=\"scroll\">\n        <List>\n          <FileMenuItem\n            files={files}\n            selectedFileNames={selectedFileNames}\n            toggleFileSelected={toggleFileSelected}\n            removeFile={removeFile}\n            downloadFile={downloadFile}\n          />\n        </List>\n      </Box>\n      {newFileLoader}\n    </>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport FileSelectorSystemDialog from \"../FileLoader/FileSelectorSystemDialog\";\nimport FileLoaderBox from \"../FileLoader/FileLoaderBox\";\n\ninterface EmptyFilesInterface {\n  loading: boolean;\n  uploadFile: (file: File) => void;\n}\n\nexport default React.memo(function({\n  loading,\n  uploadFile,\n}: EmptyFilesInterface) {\n  return (\n    <Box display=\"flex\" flex={1} justifyContent=\"center\" alignItems=\"center\">\n      {loading ? (\n        <>\n          <CircularProgress />\n          <Typography>Loading FFMPEG library...</Typography>\n        </>\n      ) : (\n        <FileSelectorSystemDialog onFileLoaded={uploadFile}>\n          {open => (\n            <FileLoaderBox padding=\"100px 180px\" onClick={open}>\n              <Typography>Click here to select file</Typography>\n            </FileLoaderBox>\n          )}\n        </FileSelectorSystemDialog>\n      )}\n    </Box>\n  );\n});\n","import React, { RefObject } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components/macro\";\n\nconst StyledCode = styled.code`\n  white-space: pre-wrap;\n  overflow: scroll;\n  background-color: white;\n  padding: 12px;\n  flex: 1;\n`;\n\ninterface LoggerViewInterface {\n  logRef: RefObject<HTMLElement>;\n}\n\nexport default React.memo(function({ logRef }: LoggerViewInterface) {\n  return (\n    <Box flexDirection=\"column\" display=\"flex\" height=\"100%\">\n      <Box\n        padding=\"18px\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"flex-end\"\n      >\n        <Button onClick={() => (logRef.current.innerHTML = \"\")}>\n          Clear logs\n        </Button>\n      </Box>\n      <StyledCode ref={logRef} />\n    </Box>\n  );\n});\n","import React from \"react\";\nimport { assocPath, curry } from \"ramda\";\nimport Box from \"@material-ui/core/Box\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport { CommandArgumentsInterface } from \"libs/ffmpeg/useCommand\";\n\ninterface CommandChildComponentWrapperInterface {\n  label: string;\n  node: any;\n  children: () => React.ReactNode;\n  enable: () => void;\n  disable: () => void;\n}\n\nexport default React.memo(function({\n  children,\n  label,\n  node,\n  enable,\n  disable,\n}: CommandChildComponentWrapperInterface) {\n  const checked = !!node;\n  return (\n    <Box display=\"flex\" marginRight=\"18px\" height=\"56px\">\n      <FormControlLabel\n        control={\n          <Checkbox checked={checked} onChange={checked ? disable : enable} />\n        }\n        label={label}\n      />\n      {checked && children()}\n    </Box>\n  );\n});\n\nexport const setCommandArgument = curry(function(\n  path: (string | number)[],\n  commandArguments: CommandArgumentsInterface,\n  setArguments: (data: CommandArgumentsInterface) => void,\n  data,\n) {\n  setArguments(assocPath(path, data, commandArguments));\n});\n","import { useState } from \"react\";\n\nexport function preventDefault(ev: Event) {\n  ev.preventDefault();\n}\n\nexport function useForceUpdate() {\n  const [, setVal] = useState();\n  return () => setVal({});\n}\n\nexport function eventValue(func: Function) {\n  return function(ev?: any) {\n    if (ev && ev.target) {\n      func(ev.target.value);\n      return;\n    }\n\n    func(null);\n  };\n}\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"libs/helpers\";\n\nimport { CommandControllerInterface } from \"libs/ffmpeg/useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { resize } = commandArguments.output;\n  return (\n    <CommandChildComponentWrapper\n      node={resize}\n      label=\"Resize\"\n      enable={() =>\n        setCommandArgument(\n          [\"output\", \"resize\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"output\", \"resize\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"200px\" display=\"flex\">\n          <Tooltip\n            title=\"horizontal pixel size of the video\"\n            placement=\"bottom-start\"\n          >\n            <TextField\n              label=\"Width\"\n              value={resize[0]}\n              placeholder=\"1920\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"output\", \"resize\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip\n            title=\"vertical pixel size of the video\"\n            placement=\"bottom-start\"\n          >\n            <TextField\n              label=\"Height\"\n              value={resize[1]}\n              placeholder=\"1080\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"output\", \"resize\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"libs/helpers\";\n\nimport { CommandControllerInterface } from \"libs/ffmpeg/useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { extractPartition } = commandArguments.input;\n  return (\n    <CommandChildComponentWrapper\n      node={extractPartition}\n      label=\"Extract partition\"\n      enable={() =>\n        setCommandArgument(\n          [\"input\", \"extractPartition\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"input\", \"extractPartition\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"350px\" display=\"flex\">\n          <Tooltip title=\"Start trimming video from\" placement=\"bottom-start\">\n            <TextField\n              label=\"Start\"\n              placeholder=\"00:00:00\"\n              value={extractPartition[0]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"extractPartition\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip title=\"Video trimming length\" placement=\"bottom-start\">\n            <TextField\n              label=\"Length\"\n              value={extractPartition[1]}\n              placeholder=\"00:00:00\"\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"extractPartition\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"libs/helpers\";\n\nimport { CommandControllerInterface } from \"libs/ffmpeg/useCommand\";\n\nexport default React.memo(function({\n  commandArguments,\n  setArguments,\n}: CommandControllerInterface) {\n  const { bitrate } = commandArguments.input;\n  return (\n    <CommandChildComponentWrapper\n      node={bitrate}\n      label=\"Bitrate\"\n      enable={() =>\n        setCommandArgument(\n          [\"input\", \"bitrate\"],\n          commandArguments,\n          setArguments,\n          [\"\", \"\"],\n        )\n      }\n      disable={() =>\n        setCommandArgument(\n          [\"input\", \"bitrate\"],\n          commandArguments,\n          setArguments,\n          null,\n        )\n      }\n    >\n      {() => (\n        <Box width=\"300px\" display=\"flex\">\n          <Tooltip title=\"Video bitrate\" placement=\"bottom-start\">\n            <TextField\n              label=\"Video\"\n              placeholder=\"4m\"\n              value={bitrate[0]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"bitrate\", 0],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n          <Box width=\"10px\" />\n          <Tooltip title=\"Audio bitrate\" placement=\"bottom-start\">\n            <TextField\n              label=\"Audio\"\n              placeholder=\"128k\"\n              value={bitrate[1]}\n              onChange={eventValue(\n                setCommandArgument(\n                  [\"input\", \"bitrate\", 1],\n                  commandArguments,\n                  setArguments,\n                ),\n              )}\n            />\n          </Tooltip>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n","export interface CodecItem {\n  name: string;\n  value: string;\n  supportedOutputs?: string[];\n  disabled?: boolean;\n}\n\nexport const videoCodecs: CodecItem[] = [\n  { name: \"Copy original\", value: \"copy\" },\n  { name: \"H.264\", value: \"libx264\" },\n  { name: \"H.265\", value: \"libx265\", disabled: true },\n  { name: \"MPEG-4 (part 2)\", value: \"mpeg4\" },\n  { name: \"AV1\", value: \"libaom-av1\", disabled: true },\n  { name: \"VP8\", value: \"libvpx\", disabled: true },\n  { name: \"VP9 (google)\", value: \"libvpx-vp9\", disabled: true },\n  {\n    name: \"Apple ProRes\",\n    value: \"prores\",\n    supportedOutputs: [\"mkv\"],\n  },\n];\n\nexport const audioCodecs: CodecItem[] = [\n  { name: \"Copy original\", value: \"copy\" },\n  { name: \"Vorbis\", value: \"libvorbis\", disabled: true },\n  { name: \"AAC\", value: \"aac\" },\n  { name: \"OPUS\", value: \"opus\" },\n];\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Box from \"@material-ui/core/Box\";\n\nimport CommandChildComponentWrapper, {\n  setCommandArgument,\n} from \"../CommandChildComponentWrapper\";\n\nimport { eventValue } from \"libs/helpers\";\nimport { CodecItem, audioCodecs, videoCodecs } from \"dictionaries/codecs\";\n\nimport { CommandControllerInterface } from \"libs/ffmpeg/useCommand\";\n\ninterface CodecsInterface extends CommandControllerInterface {\n  label: string;\n  type: \"videoCodec\" | \"audioCodec\";\n  items: CodecItem[];\n}\n\nconst BaseCodec = React.memo(function({\n  commandArguments,\n  type,\n  label,\n  items,\n  setArguments,\n}: CodecsInterface) {\n  const setType = setCommandArgument(\n    [\"input\", type],\n    commandArguments,\n    setArguments,\n  );\n\n  return (\n    <CommandChildComponentWrapper\n      node={commandArguments.input[type]}\n      label={label}\n      enable={() => setType(\"copy\")}\n      disable={() => setType(null)}\n    >\n      {() => (\n        <Box width=\"140px\" display=\"flex\">\n          <FormControl variant=\"outlined\" fullWidth>\n            <Select\n              value={commandArguments.input[type]}\n              onChange={eventValue(setType)}\n            >\n              {items.map(({ name, value, disabled }) => (\n                <MenuItem key={value} disabled={disabled} value={value}>\n                  {name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      )}\n    </CommandChildComponentWrapper>\n  );\n});\n\nexport const VideoCodec = (props: CommandControllerInterface) => (\n  <BaseCodec\n    {...props}\n    label=\"Video Codec\"\n    type=\"videoCodec\"\n    items={videoCodecs}\n  />\n);\n\nexport const AudioCodec = (props: CommandControllerInterface) => (\n  <BaseCodec\n    {...props}\n    label=\"Audio Codec\"\n    type=\"audioCodec\"\n    items={audioCodecs}\n  />\n);\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Resize from \"./components/Resize\";\nimport Extract from \"./components/Extract\";\nimport Bitrate from \"./components/Bitrate\";\nimport { AudioCodec, VideoCodec } from \"./components/Codecs\";\n\nimport { CommandControllerInterface } from \"libs/ffmpeg/useCommand\";\n\nexport default React.memo(function(props: CommandControllerInterface) {\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\">\n      <Resize {...props} />\n      <Extract {...props} />\n      <Bitrate {...props} />\n      <VideoCodec {...props} />\n      <AudioCodec {...props} />\n    </Box>\n  );\n});\n","import { EventEmitter } from \"events\";\n\nimport { tsToJs } from \"libs/tsToJs\";\n\nconst worker = import(\"!!raw-loader!./ffmpeg.worker\");\n\nexport default class FFMPEG extends EventEmitter {\n  private worker: Worker;\n\n  constructor(private ffmpegModuleString: string) {\n    super();\n    this.init();\n  }\n\n  private async init() {\n    const workerValue = await worker;\n\n    const blob = new Blob([\n      `\nconst exports = {};\n${this.ffmpegModuleString}\n${tsToJs(workerValue.default)}\nffmpegWorker();\n`,\n    ]);\n\n    this.worker = new Worker(URL.createObjectURL(blob));\n    this.prepareWorker();\n  }\n\n  private prepareWorker() {\n    this.worker.postMessage(`${document.location.href}static/js/`);\n\n    const listener = ({ data: { type, data } }) => {\n      switch (type) {\n        case \"synchronizeFileSystem\":\n          this.emit(\"synchronizeFileSystem\", data);\n          break;\n        case \"log\":\n          this.emit(\"log\", data);\n          break;\n      }\n    };\n\n    this.worker.addEventListener(\"message\", listener);\n  }\n\n  run(command: string[]) {\n    this.worker.postMessage({\n      type: \"run\",\n      data: command,\n    });\n  }\n\n  loadFile(name: string, file: File) {\n    const reader = new FileReader();\n    const blob = new Blob([file], { type: file.type });\n    return new Promise(resolve => {\n      reader.onload = event => {\n        this.worker.postMessage({\n          type: \"loadFile\",\n          data: {\n            name,\n            array: event.target.result,\n          },\n        });\n        resolve();\n      };\n      reader.readAsArrayBuffer(blob);\n    });\n  }\n\n  runWatcher(callback: (data: WatcherCallbackDataInterface) => void) {\n    const listener = ({ data: { type, data } }) => {\n      if (type === \"fileWatcherTick\") callback(data);\n    };\n\n    this.worker.addEventListener(\"message\", listener);\n    return () => this.worker.removeEventListener(\"message\", listener);\n  }\n\n  removeFile(name: string) {\n    this.worker.postMessage({\n      type: \"removeFile\",\n      data: name,\n    });\n  }\n\n  synchronizeFileSystem(fileNames: string[]) {\n    this.worker.postMessage({\n      type: \"synchronizeFileSystem\",\n      data: fileNames,\n    });\n  }\n}\n\nexport interface WatcherCallbackDataInterface {\n  [name: string]: true;\n}\n","export const tsToJs = (func: string) => {\n  return require(\"typescript\").transpileModule(func, {}).outputText;\n};\n","import React from \"react\";\nimport { assoc } from \"ramda\";\n\nexport interface CommandArgumentsInterface {\n  input: {\n    bitrate?: [string, string];\n    extractPartition?: [string, string];\n    videoCodec?: string;\n    audioCodec?: string;\n  };\n  output: {\n    resize?: [string, string];\n  };\n}\n\nexport interface CommandInterface {\n  inputs: string[];\n  outputFileExtension: string;\n  arguments: CommandArgumentsInterface;\n}\n\nexport interface CommandControllerInterface {\n  commandArguments: CommandArgumentsInterface;\n  setArguments: (commandArguments: CommandArgumentsInterface) => void;\n}\n\nconst commandConfigFromArgument: Record<\n  | (keyof CommandArgumentsInterface[\"input\"])\n  | (keyof CommandArgumentsInterface[\"output\"]),\n  (data: any) => string[]\n> = {\n  bitrate: ([video, audio]) => [\n    ...(video ? [\"-b:v\", video] : []),\n    ...(audio ? [\"-b:a\", audio] : []),\n  ],\n  resize: ([width, height]) => [\"-vf\", `scale=${width}:${height}`],\n  extractPartition: ([from, length]) => [\"-ss\", from, \"-t\", length],\n  videoCodec: codec => [\"-c:v\", codec],\n  audioCodec: codec => [\"-c:a\", codec],\n};\n\nfunction applyCommandToString(\n  key: string,\n  argumentBase:\n    | CommandArgumentsInterface[\"input\"]\n    | CommandArgumentsInterface[\"output\"],\n  result: string[],\n) {\n  if (!argumentBase[key]) return;\n  result.push(...commandConfigFromArgument[key](argumentBase[key]));\n}\n\nfunction getCommandArray(\n  command: CommandInterface,\n  basePath = \"\",\n  fileNamePostfix = \"\",\n) {\n  const result = [\n    \"ffmpeg\",\n    \"-threads\",\n    \"1\",\n    \"-y\",\n    \"-loglevel\",\n    \"debug\",\n    \"-nostdin\",\n  ];\n\n  command.inputs.forEach(input => {\n    result.push(\"-i\", `${basePath}${input}`);\n  });\n\n  result.push(\"-strict\", \"-2\");\n\n  Object.keys(command.arguments.input).forEach(key => {\n    applyCommandToString(key, command.arguments.input, result);\n  });\n\n  result.push(\n    `${basePath}output${fileNamePostfix}.${command.outputFileExtension}`,\n  );\n\n  Object.keys(command.arguments.output).forEach(key => {\n    applyCommandToString(key, command.arguments.output, result);\n  });\n\n  return result;\n}\n\nfunction getCommandString(command: CommandInterface) {\n  return getCommandArray(command).join(\" \");\n}\n\nexport default function useCommand() {\n  const [command, setCommand] = React.useState<CommandInterface>(() => ({\n    inputs: [],\n    outputFileExtension: \"mp4\",\n    arguments: {\n      input: {\n        audioCodec: \"copy\",\n        videoCodec: \"copy\",\n      },\n      output: {},\n    },\n  }));\n\n  return {\n    command,\n    setInputs: (inputs: string[]) =>\n      setCommand(assoc(\"inputs\", inputs, command)),\n    setOutputExtension: (extension: string) =>\n      setCommand(assoc(\"outputFileExtension\", extension, command)),\n    getString: () => getCommandString(command),\n    getArray: (basePath, fileNamePostfix?: string) =>\n      getCommandArray(command, basePath, fileNamePostfix),\n    setArguments: (commandArguments: CommandArgumentsInterface) =>\n      setCommand(assoc(\"arguments\", commandArguments, command)),\n  };\n}\n","import React from \"react\";\n\nimport FFMPEG, { WatcherCallbackDataInterface } from \"./library/ffmpeg\";\nimport useCommand, { CommandInterface } from \"./useCommand\";\n\nimport { LocalFileInterface } from \"types\";\n\nfunction generateFileNamePostfix(\n  command: CommandInterface,\n  files: LocalFileInterface[],\n) {\n  const foundOutputFile = files.find(\n    file => file.name === `output.${command.outputFileExtension}`,\n  );\n  if (!foundOutputFile) return \"\";\n  return `.${Date.now().toString()}`;\n}\n\nexport function useFFMPEG(\n  logFunction: (msg: string) => void,\n  synchronizeFileSystem: (files: { fileName: string; url: string }[]) => void,\n) {\n  const [ffmpegModuleSource] = React.useState(async () => {\n    const url = `${process.env.PUBLIC_URL || \"\"}/static/js/ffmpeg-core.js`;\n    const core = await fetch(url);\n    return core.text();\n  });\n\n  const commandApi = useCommand();\n\n  const [ffmpeg, setFFMPEG] = React.useState<FFMPEG>(null);\n\n  const logTextRef = React.useRef(\"\");\n\n  async function createFFMPEGModule(loggerTimerGetter: (timer) => void) {\n    const ffmpegSource = await ffmpegModuleSource;\n\n    const timer = setInterval(() => {\n      logFunction(logTextRef.current);\n      logTextRef.current = \"\";\n    }, 1000);\n    loggerTimerGetter(timer);\n\n    const ffmpeg = new FFMPEG(ffmpegSource);\n    ffmpeg.on(\"log\", msg => {\n      logTextRef.current += `${msg}\\n\\n`;\n    });\n    ffmpeg.on(\"synchronizeFileSystem\", synchronizeFileSystem);\n\n    setFFMPEG(ffmpeg);\n  }\n\n  React.useEffect(() => {\n    let loggerUpdateInterval;\n    createFFMPEGModule(timer => (loggerUpdateInterval = timer));\n    return () => clearInterval(loggerUpdateInterval);\n  }, []);\n\n  return {\n    ffmpegLoaded: !!ffmpeg,\n    commandApi,\n    removeFile: (name: string) => ffmpeg.removeFile(name),\n    run: (localFiles: LocalFileInterface[]) => {\n      const fileNamePostfix = generateFileNamePostfix(\n        commandApi.command,\n        localFiles,\n      );\n      const commandArray = commandApi.getArray(\"/src/\", fileNamePostfix);\n      ffmpeg.run(commandArray);\n    },\n    loadFile: (localFile: LocalFileInterface) =>\n      ffmpeg.loadFile(localFile.name, localFile.file),\n    runFilesWatcher: (\n      callback: (files: WatcherCallbackDataInterface) => void,\n    ) => ffmpeg.runWatcher(callback),\n    synchronizeFileSystem: (fileNames: string[]) =>\n      ffmpeg.synchronizeFileSystem(fileNames),\n  };\n}\n","import React, { MutableRefObject } from \"react\";\nimport { append, omit, remove, propEq, prop } from \"ramda\";\n\nimport { useFFMPEG } from \"libs/ffmpeg/useFFMPEG\";\nimport { useForceUpdate } from \"libs/helpers\";\n\nimport { LocalFileInterface } from \"types\";\n\nexport default function(ref: MutableRefObject<HTMLElement>) {\n  const update = useForceUpdate();\n  const localFiles = React.useRef<LocalFileInterface[]>([]);\n  const [selectedFiles, setSelectedFiles] = React.useState<{\n    [name: string]: true;\n  }>({});\n\n  const {\n    ffmpegLoaded,\n    commandApi,\n    run: runFFMPEG,\n    loadFile,\n    runFilesWatcher,\n    removeFile: removeFFMPEGFile,\n    synchronizeFileSystem,\n  } = useFFMPEG(\n    msg => {\n      if (!msg) return;\n      if (ref.current) {\n        ref.current.innerHTML += msg;\n        return;\n      }\n      console.log(msg);\n    },\n    files => {\n      files.forEach(({ fileName, url }) => {\n        const file = localFiles.current.find(propEq(\"name\", fileName));\n        if (!file) return;\n        file.objectURL = url;\n      });\n      update();\n    },\n  );\n\n  React.useEffect(() => {\n    if (!ffmpegLoaded) return;\n    runFilesWatcher(data => {\n      let newFileDetected = false;\n      Object.keys(data).forEach(fileName => {\n        const localFile = localFiles.current.find(propEq(\"name\", fileName));\n        if (localFile) return;\n        localFiles.current = append(\n          { name: fileName, file: null, objectURL: null },\n          localFiles.current,\n        );\n        newFileDetected = true;\n      });\n      if (newFileDetected) {\n        synchronizeFileSystem(localFiles.current.map(prop(\"name\")));\n      }\n      update();\n    });\n  }, [ffmpegLoaded]);\n\n  const [selectedFilesNotEmpty, setSelectedFilesNotEmpty] = React.useState(\n    false,\n  );\n\n  React.useEffect(() => {\n    const keys = Object.keys(selectedFiles);\n    commandApi.setInputs(keys);\n    setSelectedFilesNotEmpty(!!keys.length);\n  }, [selectedFiles]);\n\n  function toggleSelectFile(file: LocalFileInterface) {\n    if (selectedFiles[file.name]) {\n      setSelectedFiles(omit([file.name], selectedFiles));\n      return;\n    }\n    setSelectedFiles({ ...selectedFiles, [file.name]: true });\n  }\n\n  async function uploadFile(file: File) {\n    localFiles.current = append(\n      { name: file.name, file: file },\n      localFiles.current,\n    );\n    await Promise.all(localFiles.current.map(loadFile));\n    update();\n  }\n\n  function downloadFile(file: LocalFileInterface) {\n    const a = document.createElement(\"a\");\n    a.download = file.name;\n    document.body.appendChild(a);\n    if (file.objectURL) {\n      a.href = file.objectURL;\n    } else {\n      a.href = URL.createObjectURL(new Blob([file.file]));\n    }\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  function removeFile(localFile: LocalFileInterface) {\n    removeFFMPEGFile(localFile.name);\n    localFiles.current = remove(\n      localFiles.current.findIndex(propEq(\"name\", localFile.name)),\n      1,\n      localFiles.current,\n    );\n    setSelectedFiles(omit([localFile.name], selectedFiles));\n  }\n\n  return {\n    ffmpegLoaded,\n    selectedFiles,\n    commandApi,\n    selectedFilesNotEmpty,\n    localFiles: localFiles.current,\n    run: () => runFFMPEG(localFiles.current),\n    toggleSelectFile,\n    uploadFile,\n    downloadFile,\n    removeFile,\n  };\n}\n","import React from \"react\";\nimport { propEq } from \"ramda\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Layout from \"./Layout\";\nimport FileSelectorSystemDialog from \"./FileLoader/FileSelectorSystemDialog\";\nimport FileLoaderBox from \"./FileLoader/FileLoaderBox\";\nimport FileTree from \"./FileTree\";\nimport EmptyFiles from \"./EmptyFiles\";\nimport LoggerView from \"./LoggerView\";\nimport CommandBuilder from \"./CommandBuilder\";\n\nimport mainHook from \"./mainHook\";\n\nimport { eventValue } from \"libs/helpers\";\nimport { CodecItem, videoCodecs } from \"dictionaries/codecs\";\n\nconst defaultOutputFileExtensions = [\"mp4\", \"avi\", \"mpg\", \"mkv\"];\n\nfunction getCodecFileExtension(selectedVideoCodec: CodecItem) {\n  if (!selectedVideoCodec) return defaultOutputFileExtensions;\n\n  const { supportedOutputs } = selectedVideoCodec;\n  if (supportedOutputs) return supportedOutputs;\n\n  return defaultOutputFileExtensions;\n}\n\nexport default React.memo(function() {\n  const logRef = React.useRef<HTMLElement>(null);\n  const {\n    ffmpegLoaded,\n    selectedFiles,\n    commandApi,\n    selectedFilesNotEmpty,\n    localFiles,\n    toggleSelectFile,\n    uploadFile,\n    downloadFile,\n    removeFile,\n    run,\n  } = mainHook(logRef);\n\n  const videoCodec = commandApi.command.arguments.input.videoCodec;\n\n  const selectedVideoCodec = React.useMemo(\n    () => videoCodecs.find(propEq(\"value\", videoCodec)),\n    [videoCodec],\n  );\n\n  React.useEffect(() => {\n    if (selectedVideoCodec && selectedVideoCodec.supportedOutputs)\n      commandApi.setOutputExtension(selectedVideoCodec.supportedOutputs[0]);\n  }, [selectedVideoCodec]);\n\n  return (\n    <Layout\n      headerAction={\n        <Box display=\"flex\" alignItems=\"center\">\n          {selectedFilesNotEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"default\"\n              size=\"large\"\n              onClick={run}\n            >\n              run\n            </Button>\n          )}\n        </Box>\n      }\n    >\n      {localFiles.length === 0 ? (\n        <EmptyFiles loading={!ffmpegLoaded} uploadFile={uploadFile} />\n      ) : (\n        <Box display=\"flex\" flex={1} height=\"calc(100vh - 64px)\">\n          <Box\n            height=\"100%\"\n            width=\"20%\"\n            padding=\"18px\"\n            borderRight=\"1px solid lightgray\"\n            display=\"flex\"\n            flexDirection=\"column\"\n          >\n            <FileTree\n              files={localFiles}\n              selectedFileNames={selectedFiles}\n              newFileLoader={\n                <FileSelectorSystemDialog onFileLoaded={uploadFile}>\n                  {open => (\n                    <FileLoaderBox padding=\"10px 100px\" onClick={open}>\n                      <Typography>Upload file</Typography>\n                    </FileLoaderBox>\n                  )}\n                </FileSelectorSystemDialog>\n              }\n              downloadFile={downloadFile}\n              removeFile={removeFile}\n              toggleFileSelected={toggleSelectFile}\n            />\n          </Box>\n          <Box\n            height=\"100%\"\n            width=\"80%\"\n            padding=\"18px\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"space-between\"\n          >\n            <Box padding=\"18px\" display=\"flex\">\n              <Box\n                bgcolor=\"lightgray\"\n                marginRight=\"18px\"\n                flex={1}\n                display=\"flex\"\n                alignItems=\"center\"\n                padding=\"0 18px\"\n              >\n                <code>{commandApi.getString()}</code>\n              </Box>\n              <Box width=\"100px\" marginBottom=\"2px\">\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Select\n                    value={commandApi.command.outputFileExtension}\n                    onChange={eventValue(commandApi.setOutputExtension)}\n                  >\n                    {getCodecFileExtension(selectedVideoCodec).map(name => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Box>\n            </Box>\n            <Box padding=\"18px\">\n              <CommandBuilder\n                commandArguments={commandApi.command.arguments}\n                setArguments={commandApi.setArguments}\n              />\n            </Box>\n            <LoggerView logRef={logRef} />\n          </Box>\n        </Box>\n      )}\n    </Layout>\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, indigo } from \"@material-ui/core/colors\";\n\nimport \"./styles/clear.css\";\nimport \"./styles/App.css\";\n\nimport App from \"./App\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: blue[900],\n    },\n    primary: {\n      main: indigo[700],\n    },\n  },\n});\n\nconst Root = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}